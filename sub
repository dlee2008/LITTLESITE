ssr://MTE2LjE2Mi4xMjAuMjQ6NTYwOmF1dGhfYWVzMTI4X21kNTpjaGFjaGEyMC1pZXRmOnBsYWluOmJXSnNZVzVyTVhCdmNuUT0vP29iZnNwYXJhbT0mcmVtYXJrcz04SiUyQkhxUENmaDdNZ1EwNGdNVE0lM0QmcHJvdG9wYXJhbT1OVE01TWpRNmFHcG5hblY1Tm5RMk5UVnFhbWMlM0Q=
ssr://MTE2LjE2Mi4xMjAuMjY6NTYxOmF1dGhfYWVzMTI4X21kNTpjaGFjaGEyMC1pZXRmOnBsYWluOmJXSnNZVzVyTVhCdmNuUT0vP29iZnNwYXJhbT0mcmVtYXJrcz04SiUyQkhxUENmaDdNZ1EwNGdNVGMlM0QmcHJvdG9wYXJhbT1OVE01TWpRNmFHcG5hblY1Tm5RMk5UVnFhbWMlM0Q=
trojan://d02058f4f819dced@5.44.249.157:3389?allowInsecure=1#%F0%9F%87%B8%F0%9F%87%AC+SG+7
ssr://MTgzLjIzMi4xNDEuMTE5OjU2MTphdXRoX2FlczEyOF9tZDU6Y2hhY2hhMjAtaWV0ZjpwbGFpbjpiV0pzWVc1ck1YQnZjblE9Lz9vYmZzcGFyYW09WkVNMWRGcFRPVEpqUnpWdldWaFImcmVtYXJrcz04SiUyQkhxUENmaDdNZ1EwNGdNVEUlM0QmcHJvdG9wYXJhbT1OVE01TWpRNmFHcG5hblY1Tm5RMk5UVnFhbWMlM0Q=
ssr://Z3Vhbmd6aG91ZGRucy54eXo6MzUyNDc6YXV0aF9hZXMxMjhfc2hhMTpjaGFjaGEyMC1pZXRmOnRsczEuMl90aWNrZXRfYXV0aDpSbWhpWlRCNi8/b2Jmc3BhcmFtPU1ERTRZV0l4TWpBeU15NXRhV055YjNOdlpuUXVZMjl0JnJlbWFya3M9OEolMkJIcVBDZmg3TWdRMDRnTWpRJTNEJnByb3RvcGFyYW09TWpZM09EWTZjak4xVjBodw==
ssr://Z3Vhbmd6aG91ZGRucy54eXo6MTEwMDU6YXV0aF9hZXMxMjhfc2hhMTpjaGFjaGEyMC1pZXRmOnRsczEuMl90aWNrZXRfYXV0aDpSbWhpWlRCNi8/b2Jmc3BhcmFtPU1ERTRZV0l4TWpBeU15NXRhV055YjNOdlpuUXVZMjl0JnJlbWFya3M9OEolMkJIcVBDZmg3TWdRMDRnTVRZJTNEJnByb3RvcGFyYW09TWpZM09EWTZjak4xVjBodw==
ssr://emo5LmZkaHN1amoueHl6OjIzNTU4OmF1dGhfYWVzMTI4X3NoYTE6YWVzLTI1Ni1jZmI6aHR0cF9zaW1wbGU6U2pOSlZGQngvP29iZnNwYXJhbT1WbTB4ZDFNd01VaFNXR2hWVjBkNFZWbFVSbmRWVmxwMFpVZEdXRlpzYkROWGExSlRWbXhhYzFkdWJGZE5hbFpNV1d0YVlXTXhUblZqUm1SWFRURkplbGRXVWtkWGJWRjVWR3RrYVZKdVFtOVVWM2hLWld4a1Yxa3phRlJOVm5CWlZUSjBWMWRIU2tsUmJUbGFWa1UxUkZscVJtRlNNVnB6V2tVNVUwMVZjRWxXYkdNeFZqRmtTRk5zYUd4U2JWSllWbTEwVmclM0QlM0QmcmVtYXJrcz04SiUyQkhxUENmaDdNZ1EwNGdNVFElM0QmcHJvdG9wYXJhbT1NamcyTmpVeU9rdDVOa3RQZHclM0QlM0Q=
ssr://emo5LmZkaHN1amoueHl6OjIzNTU3OmF1dGhfYWVzMTI4X3NoYTE6YWVzLTI1Ni1jZmI6aHR0cF9zaW1wbGU6U2pOSlZGQngvP29iZnNwYXJhbT1Xa2RLYkU5VVdYbFBSRmt5VGxSSmRXSlhiR3BqYlRsNllqSmFNRXh0VG5aaVVRJTNEJTNEJnJlbWFya3M9OEolMkJIcVBDZmg3TWdRMDRnTXclM0QlM0QmcHJvdG9wYXJhbT1NamcyTmpVeU9rdDVOa3RQZHclM0QlM0Q=
ssr://MTE2LjE2Mi4xMjAuMjQ6NTYyOmF1dGhfYWVzMTI4X21kNTpjaGFjaGEyMC1pZXRmOnBsYWluOmJXSnNZVzVyTVhCdmNuUT0vP29iZnNwYXJhbT0mcmVtYXJrcz04SiUyQkhxUENmaDdNZ1EwNGdNVFUlM0QmcHJvdG9wYXJhbT1OVE01TWpRNmFHcG5hblY1Tm5RMk5UVnFhbWMlM0Q=
trojan://d02058f4f819dced@5.44.249.155:3389?allowInsecure=1#%F0%9F%87%B8%F0%9F%87%AC+SG+8
trojan://d4e41ff772c7fd45@5.44.249.156:3389?allowInsecure=1#%F0%9F%87%B8%F0%9F%87%AC+SG+10
ssr://YWFzZzMuZmRoc3Vqai54eXo6MTExOTc6YXV0aF9hZXMxMjhfc2hhMTphZXMtMjU2LWNmYjpodHRwX3NpbXBsZTpTak5KVkZCeC8/b2Jmc3BhcmFtPVZtMHdlR1F4VFhkTlZXaFRWMGRvVmxZd1pEUldWbXhWVW01a1ZsWnNjREJhVldSSFYwWmFjMkpFVGxoaE1VcFVWbTE0WVdNeFpIVmlSbVJPWVd4YVRWZFhkR0ZaVjAxNFZHNVdhbEp0VWxoVVZFWktaV3hrVjFWclpGaGlWa1kxVmtkMGEyRldTblZSYlRsVlZqTm9TMXBYZUd0V01XdDZZVVpTVGxadVFscFdWRW93VmpGa1NGTnJiRkppVkd4aFZtdFZNVkpHYkhGU2JVWlRUVlp3ZWxkclZUVlZNREZXWTBWc1YySkhUWGhXYWtaclUwWk9jMkZIZUZOaVZrcFpWbTB4TUZabiZyZW1hcmtzPThKJTJCSHFQQ2ZoN01nUTA0Z01RJTNEJTNEJnByb3RvcGFyYW09TWpnMk5qVXlPa3Q1Tmt0UGR3JTNEJTNE